# Form implementation generated from reading ui file 'UI/MainWindow.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1117, 705)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("UI/../505c2615/icon.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout()
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setObjectName("label")
        self.verticalLayout_11.addWidget(self.label)
        self.groupBox_lecture_donnees = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.groupBox_lecture_donnees.setObjectName("groupBox_lecture_donnees")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBox_lecture_donnees)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.checkBox_superposer_courbes = QtWidgets.QCheckBox(parent=self.groupBox_lecture_donnees)
        self.checkBox_superposer_courbes.setChecked(True)
        self.checkBox_superposer_courbes.setObjectName("checkBox_superposer_courbes")
        self.horizontalLayout_4.addWidget(self.checkBox_superposer_courbes)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_nom_fichier = QtWidgets.QLabel(parent=self.groupBox_lecture_donnees)
        self.label_nom_fichier.setEnabled(False)
        self.label_nom_fichier.setObjectName("label_nom_fichier")
        self.horizontalLayout_2.addWidget(self.label_nom_fichier)
        self.lineEdit_nom_fichier = QtWidgets.QLineEdit(parent=self.groupBox_lecture_donnees)
        self.lineEdit_nom_fichier.setEnabled(False)
        self.lineEdit_nom_fichier.setObjectName("lineEdit_nom_fichier")
        self.horizontalLayout_2.addWidget(self.lineEdit_nom_fichier)
        self.pushButton_nom_fichier = QtWidgets.QPushButton(parent=self.groupBox_lecture_donnees)
        self.pushButton_nom_fichier.setEnabled(False)
        self.pushButton_nom_fichier.setObjectName("pushButton_nom_fichier")
        self.horizontalLayout_2.addWidget(self.pushButton_nom_fichier)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_nom_dossier = QtWidgets.QLabel(parent=self.groupBox_lecture_donnees)
        self.label_nom_dossier.setEnabled(True)
        self.label_nom_dossier.setObjectName("label_nom_dossier")
        self.horizontalLayout_3.addWidget(self.label_nom_dossier)
        self.lineEdit_nom_dossier = QtWidgets.QLineEdit(parent=self.groupBox_lecture_donnees)
        self.lineEdit_nom_dossier.setEnabled(True)
        self.lineEdit_nom_dossier.setObjectName("lineEdit_nom_dossier")
        self.horizontalLayout_3.addWidget(self.lineEdit_nom_dossier)
        self.pushButton_nom_dossier = QtWidgets.QPushButton(parent=self.groupBox_lecture_donnees)
        self.pushButton_nom_dossier.setEnabled(True)
        self.pushButton_nom_dossier.setObjectName("pushButton_nom_dossier")
        self.horizontalLayout_3.addWidget(self.pushButton_nom_dossier)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4.addLayout(self.verticalLayout)
        self.line = QtWidgets.QFrame(parent=self.groupBox_lecture_donnees)
        self.line.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.horizontalLayout_4.addWidget(self.line)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_type_fichier = QtWidgets.QLabel(parent=self.groupBox_lecture_donnees)
        self.label_type_fichier.setObjectName("label_type_fichier")
        self.horizontalLayout_5.addWidget(self.label_type_fichier)
        self.comboBox_type_fichier = QtWidgets.QComboBox(parent=self.groupBox_lecture_donnees)
        self.comboBox_type_fichier.setObjectName("comboBox_type_fichier")
        self.comboBox_type_fichier.addItem("")
        self.comboBox_type_fichier.addItem("")
        self.horizontalLayout_5.addWidget(self.comboBox_type_fichier)
        self.verticalLayout_2.addLayout(self.horizontalLayout_5)
        self.line_7 = QtWidgets.QFrame(parent=self.groupBox_lecture_donnees)
        self.line_7.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_7.setObjectName("line_7")
        self.verticalLayout_2.addWidget(self.line_7)
        self.checkBox_calc_temps = QtWidgets.QCheckBox(parent=self.groupBox_lecture_donnees)
        self.checkBox_calc_temps.setChecked(True)
        self.checkBox_calc_temps.setObjectName("checkBox_calc_temps")
        self.verticalLayout_2.addWidget(self.checkBox_calc_temps)
        self.horizontalLayout_4.addLayout(self.verticalLayout_2)
        self.verticalLayout_3.addLayout(self.horizontalLayout_4)
        self.groupBox_enregistrement_donnees = QtWidgets.QGroupBox(parent=self.groupBox_lecture_donnees)
        self.groupBox_enregistrement_donnees.setObjectName("groupBox_enregistrement_donnees")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.groupBox_enregistrement_donnees)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.checkBox_enregistrer_data = QtWidgets.QCheckBox(parent=self.groupBox_enregistrement_donnees)
        self.checkBox_enregistrer_data.setObjectName("checkBox_enregistrer_data")
        self.horizontalLayout_8.addWidget(self.checkBox_enregistrer_data)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_nom_enregistrement = QtWidgets.QLabel(parent=self.groupBox_enregistrement_donnees)
        self.label_nom_enregistrement.setEnabled(False)
        self.label_nom_enregistrement.setObjectName("label_nom_enregistrement")
        self.horizontalLayout_6.addWidget(self.label_nom_enregistrement)
        self.lineEdit_nom_enregistrement = QtWidgets.QLineEdit(parent=self.groupBox_enregistrement_donnees)
        self.lineEdit_nom_enregistrement.setEnabled(False)
        self.lineEdit_nom_enregistrement.setObjectName("lineEdit_nom_enregistrement")
        self.horizontalLayout_6.addWidget(self.lineEdit_nom_enregistrement)
        self.verticalLayout_4.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_dossier_enregistrement = QtWidgets.QLabel(parent=self.groupBox_enregistrement_donnees)
        self.label_dossier_enregistrement.setEnabled(False)
        self.label_dossier_enregistrement.setObjectName("label_dossier_enregistrement")
        self.horizontalLayout_7.addWidget(self.label_dossier_enregistrement)
        self.lineEdit_dossier_enregistrement = QtWidgets.QLineEdit(parent=self.groupBox_enregistrement_donnees)
        self.lineEdit_dossier_enregistrement.setEnabled(False)
        self.lineEdit_dossier_enregistrement.setObjectName("lineEdit_dossier_enregistrement")
        self.horizontalLayout_7.addWidget(self.lineEdit_dossier_enregistrement)
        self.verticalLayout_4.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_8.addLayout(self.verticalLayout_4)
        self.pushButton_parcourir_enregistrement = QtWidgets.QPushButton(parent=self.groupBox_enregistrement_donnees)
        self.pushButton_parcourir_enregistrement.setEnabled(False)
        self.pushButton_parcourir_enregistrement.setObjectName("pushButton_parcourir_enregistrement")
        self.horizontalLayout_8.addWidget(self.pushButton_parcourir_enregistrement)
        self.verticalLayout_3.addWidget(self.groupBox_enregistrement_donnees)
        self.groupBox_traitement_donnees = QtWidgets.QGroupBox(parent=self.groupBox_lecture_donnees)
        self.groupBox_traitement_donnees.setObjectName("groupBox_traitement_donnees")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.groupBox_traitement_donnees)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.checkBox_sppr_rollback = QtWidgets.QCheckBox(parent=self.groupBox_traitement_donnees)
        self.checkBox_sppr_rollback.setChecked(True)
        self.checkBox_sppr_rollback.setObjectName("checkBox_sppr_rollback")
        self.horizontalLayout_12.addWidget(self.checkBox_sppr_rollback)
        self.line_2 = QtWidgets.QFrame(parent=self.groupBox_traitement_donnees)
        self.line_2.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_2.setObjectName("line_2")
        self.horizontalLayout_12.addWidget(self.line_2)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.checkBox_recherche_deb_impact = QtWidgets.QCheckBox(parent=self.groupBox_traitement_donnees)
        self.checkBox_recherche_deb_impact.setChecked(True)
        self.checkBox_recherche_deb_impact.setObjectName("checkBox_recherche_deb_impact")
        self.verticalLayout_5.addWidget(self.checkBox_recherche_deb_impact)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_taux_augmentation = QtWidgets.QLabel(parent=self.groupBox_traitement_donnees)
        self.label_taux_augmentation.setEnabled(True)
        self.label_taux_augmentation.setObjectName("label_taux_augmentation")
        self.horizontalLayout_9.addWidget(self.label_taux_augmentation)
        self.doubleSpinBox_taux_augmentation = QtWidgets.QDoubleSpinBox(parent=self.groupBox_traitement_donnees)
        self.doubleSpinBox_taux_augmentation.setEnabled(True)
        self.doubleSpinBox_taux_augmentation.setMaximum(5.0)
        self.doubleSpinBox_taux_augmentation.setSingleStep(0.1)
        self.doubleSpinBox_taux_augmentation.setProperty("value", 0.9)
        self.doubleSpinBox_taux_augmentation.setObjectName("doubleSpinBox_taux_augmentation")
        self.horizontalLayout_9.addWidget(self.doubleSpinBox_taux_augmentation)
        self.verticalLayout_5.addLayout(self.horizontalLayout_9)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_nb_pas_avant_augmentation = QtWidgets.QLabel(parent=self.groupBox_traitement_donnees)
        self.label_nb_pas_avant_augmentation.setEnabled(True)
        self.label_nb_pas_avant_augmentation.setObjectName("label_nb_pas_avant_augmentation")
        self.horizontalLayout_10.addWidget(self.label_nb_pas_avant_augmentation)
        self.spinBox_nb_pas_avant_augmentation = QtWidgets.QSpinBox(parent=self.groupBox_traitement_donnees)
        self.spinBox_nb_pas_avant_augmentation.setEnabled(True)
        self.spinBox_nb_pas_avant_augmentation.setMaximum(30)
        self.spinBox_nb_pas_avant_augmentation.setProperty("value", 1)
        self.spinBox_nb_pas_avant_augmentation.setObjectName("spinBox_nb_pas_avant_augmentation")
        self.horizontalLayout_10.addWidget(self.spinBox_nb_pas_avant_augmentation)
        self.verticalLayout_5.addLayout(self.horizontalLayout_10)
        self.horizontalLayout_12.addLayout(self.verticalLayout_5)
        self.line_3 = QtWidgets.QFrame(parent=self.groupBox_traitement_donnees)
        self.line_3.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_3.setObjectName("line_3")
        self.horizontalLayout_12.addWidget(self.line_3)
        self.verticalLayout_14 = QtWidgets.QVBoxLayout()
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.checkBox_deb_impact_manuel = QtWidgets.QCheckBox(parent=self.groupBox_traitement_donnees)
        self.checkBox_deb_impact_manuel.setObjectName("checkBox_deb_impact_manuel")
        self.verticalLayout_14.addWidget(self.checkBox_deb_impact_manuel)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.label_tmps_deb_impact = QtWidgets.QLabel(parent=self.groupBox_traitement_donnees)
        self.label_tmps_deb_impact.setObjectName("label_tmps_deb_impact")
        self.horizontalLayout_11.addWidget(self.label_tmps_deb_impact)
        self.doubleSpinBox_tmps_deb_impact = QtWidgets.QDoubleSpinBox(parent=self.groupBox_traitement_donnees)
        self.doubleSpinBox_tmps_deb_impact.setEnabled(False)
        self.doubleSpinBox_tmps_deb_impact.setMaximum(10000.0)
        self.doubleSpinBox_tmps_deb_impact.setProperty("value", 200.0)
        self.doubleSpinBox_tmps_deb_impact.setObjectName("doubleSpinBox_tmps_deb_impact")
        self.horizontalLayout_11.addWidget(self.doubleSpinBox_tmps_deb_impact)
        self.verticalLayout_14.addLayout(self.horizontalLayout_11)
        self.horizontalLayout_12.addLayout(self.verticalLayout_14)
        self.verticalLayout_10.addLayout(self.horizontalLayout_12)
        self.line_8 = QtWidgets.QFrame(parent=self.groupBox_traitement_donnees)
        self.line_8.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_8.setObjectName("line_8")
        self.verticalLayout_10.addWidget(self.line_8)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.checkBox_tarrage_dep = QtWidgets.QCheckBox(parent=self.groupBox_traitement_donnees)
        self.checkBox_tarrage_dep.setChecked(True)
        self.checkBox_tarrage_dep.setObjectName("checkBox_tarrage_dep")
        self.verticalLayout_6.addWidget(self.checkBox_tarrage_dep)
        self.checkBox_tarrage_tmps = QtWidgets.QCheckBox(parent=self.groupBox_traitement_donnees)
        self.checkBox_tarrage_tmps.setChecked(True)
        self.checkBox_tarrage_tmps.setObjectName("checkBox_tarrage_tmps")
        self.verticalLayout_6.addWidget(self.checkBox_tarrage_tmps)
        self.horizontalLayout_16.addLayout(self.verticalLayout_6)
        self.line_4 = QtWidgets.QFrame(parent=self.groupBox_traitement_donnees)
        self.line_4.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_4.setObjectName("line_4")
        self.horizontalLayout_16.addWidget(self.line_4)
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.checkBox_detect_fin_essai = QtWidgets.QCheckBox(parent=self.groupBox_traitement_donnees)
        self.checkBox_detect_fin_essai.setChecked(True)
        self.checkBox_detect_fin_essai.setObjectName("checkBox_detect_fin_essai")
        self.verticalLayout_7.addWidget(self.checkBox_detect_fin_essai)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.label_dep_max = QtWidgets.QLabel(parent=self.groupBox_traitement_donnees)
        self.label_dep_max.setObjectName("label_dep_max")
        self.horizontalLayout_13.addWidget(self.label_dep_max)
        self.doubleSpinBox_dep_max = QtWidgets.QDoubleSpinBox(parent=self.groupBox_traitement_donnees)
        self.doubleSpinBox_dep_max.setMaximum(100000.0)
        self.doubleSpinBox_dep_max.setSingleStep(0.1)
        self.doubleSpinBox_dep_max.setProperty("value", 19.73)
        self.doubleSpinBox_dep_max.setObjectName("doubleSpinBox_dep_max")
        self.horizontalLayout_13.addWidget(self.doubleSpinBox_dep_max)
        self.verticalLayout_7.addLayout(self.horizontalLayout_13)
        self.horizontalLayout_16.addLayout(self.verticalLayout_7)
        self.line_5 = QtWidgets.QFrame(parent=self.groupBox_traitement_donnees)
        self.line_5.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_5.setObjectName("line_5")
        self.horizontalLayout_16.addWidget(self.line_5)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.checkBox_calculer_energie = QtWidgets.QCheckBox(parent=self.groupBox_traitement_donnees)
        self.checkBox_calculer_energie.setChecked(True)
        self.checkBox_calculer_energie.setObjectName("checkBox_calculer_energie")
        self.verticalLayout_8.addWidget(self.checkBox_calculer_energie)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.label_fact_force = QtWidgets.QLabel(parent=self.groupBox_traitement_donnees)
        self.label_fact_force.setObjectName("label_fact_force")
        self.horizontalLayout_14.addWidget(self.label_fact_force)
        self.doubleSpinBox_fact_force = QtWidgets.QDoubleSpinBox(parent=self.groupBox_traitement_donnees)
        self.doubleSpinBox_fact_force.setDecimals(6)
        self.doubleSpinBox_fact_force.setMinimum(-1000000000000.0)
        self.doubleSpinBox_fact_force.setMaximum(1000000000000.0)
        self.doubleSpinBox_fact_force.setProperty("value", 1.0)
        self.doubleSpinBox_fact_force.setObjectName("doubleSpinBox_fact_force")
        self.horizontalLayout_14.addWidget(self.doubleSpinBox_fact_force)
        self.verticalLayout_8.addLayout(self.horizontalLayout_14)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.label_fact_dep = QtWidgets.QLabel(parent=self.groupBox_traitement_donnees)
        self.label_fact_dep.setObjectName("label_fact_dep")
        self.horizontalLayout_15.addWidget(self.label_fact_dep)
        self.doubleSpinBox_fact_dep = QtWidgets.QDoubleSpinBox(parent=self.groupBox_traitement_donnees)
        self.doubleSpinBox_fact_dep.setDecimals(6)
        self.doubleSpinBox_fact_dep.setMinimum(-1000000000000.0)
        self.doubleSpinBox_fact_dep.setMaximum(1000000000000.0)
        self.doubleSpinBox_fact_dep.setProperty("value", 0.001)
        self.doubleSpinBox_fact_dep.setObjectName("doubleSpinBox_fact_dep")
        self.horizontalLayout_15.addWidget(self.doubleSpinBox_fact_dep)
        self.verticalLayout_8.addLayout(self.horizontalLayout_15)
        self.horizontalLayout_16.addLayout(self.verticalLayout_8)
        self.line_6 = QtWidgets.QFrame(parent=self.groupBox_traitement_donnees)
        self.line_6.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_6.setObjectName("line_6")
        self.horizontalLayout_16.addWidget(self.line_6)
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.checkBox_calc_vitesse_impact = QtWidgets.QCheckBox(parent=self.groupBox_traitement_donnees)
        self.checkBox_calc_vitesse_impact.setChecked(True)
        self.checkBox_calc_vitesse_impact.setObjectName("checkBox_calc_vitesse_impact")
        self.verticalLayout_9.addWidget(self.checkBox_calc_vitesse_impact)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.label_nbpts_vitesse_impact = QtWidgets.QLabel(parent=self.groupBox_traitement_donnees)
        self.label_nbpts_vitesse_impact.setObjectName("label_nbpts_vitesse_impact")
        self.horizontalLayout_17.addWidget(self.label_nbpts_vitesse_impact)
        self.spinBox_nbpts_vitesse_impact = QtWidgets.QSpinBox(parent=self.groupBox_traitement_donnees)
        self.spinBox_nbpts_vitesse_impact.setMaximum(30)
        self.spinBox_nbpts_vitesse_impact.setProperty("value", 3)
        self.spinBox_nbpts_vitesse_impact.setObjectName("spinBox_nbpts_vitesse_impact")
        self.horizontalLayout_17.addWidget(self.spinBox_nbpts_vitesse_impact)
        self.verticalLayout_9.addLayout(self.horizontalLayout_17)
        self.horizontalLayout_16.addLayout(self.verticalLayout_9)
        self.verticalLayout_10.addLayout(self.horizontalLayout_16)
        self.verticalLayout_3.addWidget(self.groupBox_traitement_donnees)
        self.groupBox_graphiques = QtWidgets.QGroupBox(parent=self.groupBox_lecture_donnees)
        self.groupBox_graphiques.setObjectName("groupBox_graphiques")
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout(self.groupBox_graphiques)
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.checkBox_afficher_dep_tmps = QtWidgets.QCheckBox(parent=self.groupBox_graphiques)
        self.checkBox_afficher_dep_tmps.setChecked(True)
        self.checkBox_afficher_dep_tmps.setObjectName("checkBox_afficher_dep_tmps")
        self.horizontalLayout_18.addWidget(self.checkBox_afficher_dep_tmps)
        self.checkBox_afficher_F_tmps = QtWidgets.QCheckBox(parent=self.groupBox_graphiques)
        self.checkBox_afficher_F_tmps.setChecked(True)
        self.checkBox_afficher_F_tmps.setObjectName("checkBox_afficher_F_tmps")
        self.horizontalLayout_18.addWidget(self.checkBox_afficher_F_tmps)
        self.checkBox_afficher_F_dep = QtWidgets.QCheckBox(parent=self.groupBox_graphiques)
        self.checkBox_afficher_F_dep.setChecked(True)
        self.checkBox_afficher_F_dep.setObjectName("checkBox_afficher_F_dep")
        self.horizontalLayout_18.addWidget(self.checkBox_afficher_F_dep)
        self.checkBox_afficher_sep = QtWidgets.QCheckBox(parent=self.groupBox_graphiques)
        self.checkBox_afficher_sep.setChecked(False)
        self.checkBox_afficher_sep.setObjectName("checkBox_afficher_sep")
        self.horizontalLayout_18.addWidget(self.checkBox_afficher_sep)
        self.verticalLayout_3.addWidget(self.groupBox_graphiques)
        self.verticalLayout_11.addWidget(self.groupBox_lecture_donnees)
        self.verticalLayout_13 = QtWidgets.QVBoxLayout()
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_Defaults = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_Defaults.setObjectName("pushButton_Defaults")
        self.horizontalLayout.addWidget(self.pushButton_Defaults)
        self.pushButton_MakeConfig = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_MakeConfig.setObjectName("pushButton_MakeConfig")
        self.horizontalLayout.addWidget(self.pushButton_MakeConfig)
        self.pushButton_ExecDataTreatment = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_ExecDataTreatment.setObjectName("pushButton_ExecDataTreatment")
        self.horizontalLayout.addWidget(self.pushButton_ExecDataTreatment)
        self.pushButton_Quit = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_Quit.setObjectName("pushButton_Quit")
        self.horizontalLayout.addWidget(self.pushButton_Quit)
        self.verticalLayout_13.addLayout(self.horizontalLayout)
        self.verticalLayout_11.addLayout(self.verticalLayout_13)
        self.horizontalLayout_19.addLayout(self.verticalLayout_11)
        self.line_9 = QtWidgets.QFrame(parent=self.centralwidget)
        self.line_9.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_9.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_9.setObjectName("line_9")
        self.horizontalLayout_19.addWidget(self.line_9)
        self.verticalLayout_12 = QtWidgets.QVBoxLayout()
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_12.addWidget(self.label_2)
        self.textEdit_terminal = QtWidgets.QTextEdit(parent=self.centralwidget)
        self.textEdit_terminal.setMinimumSize(QtCore.QSize(300, 0))
        self.textEdit_terminal.setUndoRedoEnabled(False)
        self.textEdit_terminal.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.LinksAccessibleByKeyboard|QtCore.Qt.TextInteractionFlag.LinksAccessibleByMouse|QtCore.Qt.TextInteractionFlag.TextBrowserInteraction|QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse)
        self.textEdit_terminal.setObjectName("textEdit_terminal")
        self.verticalLayout_12.addWidget(self.textEdit_terminal)
        self.pushButton_effacer_terminal = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_effacer_terminal.setObjectName("pushButton_effacer_terminal")
        self.verticalLayout_12.addWidget(self.pushButton_effacer_terminal)
        self.horizontalLayout_19.addLayout(self.verticalLayout_12)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1117, 30))
        self.menubar.setDefaultUp(False)
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        self.menuFichers = QtWidgets.QMenu(parent=self.menubar)
        self.menuFichers.setObjectName("menuFichers")
        self.menuAide = QtWidgets.QMenu(parent=self.menubar)
        self.menuAide.setObjectName("menuAide")
        MainWindow.setMenuBar(self.menubar)
        self.actionOuvrir_un_fichier_de_configuration = QtGui.QAction(parent=MainWindow)
        self.actionOuvrir_un_fichier_de_configuration.setObjectName("actionOuvrir_un_fichier_de_configuration")
        self.actionQuitter = QtGui.QAction(parent=MainWindow)
        self.actionQuitter.setObjectName("actionQuitter")
        self.actionAide = QtGui.QAction(parent=MainWindow)
        self.actionAide.setObjectName("actionAide")
        self.action_Propos = QtGui.QAction(parent=MainWindow)
        self.action_Propos.setObjectName("action_Propos")
        self.action_APropos = QtGui.QAction(parent=MainWindow)
        self.action_APropos.setObjectName("action_APropos")
        self.menuFichers.addAction(self.actionOuvrir_un_fichier_de_configuration)
        self.menuFichers.addSeparator()
        self.menuFichers.addAction(self.actionQuitter)
        self.menuAide.addAction(self.actionAide)
        self.menuAide.addSeparator()
        self.menuAide.addAction(self.action_APropos)
        self.menubar.addAction(self.menuFichers.menuAction())
        self.menubar.addAction(self.menuAide.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "TDC"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">Les informations concernant chaque fonctionnalités se trouvent dans les infos-bulles.</p></body></html>"))
        self.groupBox_lecture_donnees.setTitle(_translate("MainWindow", "Lecture des Données"))
        self.checkBox_superposer_courbes.setToolTip(_translate("MainWindow", "<html><head/><body><p>Superposer les courbes des données dans un même dossier ?</p><p>Si cette case est cochée, nom_dossier doit-être renseigné.</p><p>Sinon, nom_fichier et nom_dossier doivent-être renseignés.</p></body></html>"))
        self.checkBox_superposer_courbes.setText(_translate("MainWindow", "superposer_courbes"))
        self.label_nom_fichier.setToolTip(_translate("MainWindow", "<html><head/><body><p>Nom du fichier à traiter.</p><p>N\'est pas nécessaire à renseigner si superposer_courbes = True.</p></body></html>"))
        self.label_nom_fichier.setText(_translate("MainWindow", "nom_fichier"))
        self.lineEdit_nom_fichier.setToolTip(_translate("MainWindow", "<html><head/><body><p>Nom du fichier à traiter.</p><p>N\'est pas nécessaire à renseigner si superposer_courbes = True.</p></body></html>"))
        self.pushButton_nom_fichier.setToolTip(_translate("MainWindow", "<html><head/><body><p>Parcourir le fichier à traiter.</p></body></html>"))
        self.pushButton_nom_fichier.setText(_translate("MainWindow", "Parcourir"))
        self.label_nom_dossier.setToolTip(_translate("MainWindow", "<html><head/><body><p>Chemin vers le dossier du/des fichier(s) à traiter.</p><p>Ce paramètre est tout le temps à renseigner.</p></body></html>"))
        self.label_nom_dossier.setText(_translate("MainWindow", "nom_dossier"))
        self.lineEdit_nom_dossier.setToolTip(_translate("MainWindow", "<html><head/><body><p>Chemin vers le dossier du/des fichier(s) à traiter.</p><p>Ce paramètre est tout le temps à renseigner.</p></body></html>"))
        self.pushButton_nom_dossier.setToolTip(_translate("MainWindow", "<html><head/><body><p>Parcourir le dossier du/des fichier(s) à traiter.</p></body></html>"))
        self.pushButton_nom_dossier.setText(_translate("MainWindow", "Parcourir"))
        self.label_type_fichier.setToolTip(_translate("MainWindow", "<html><head/><body><p>Type du fichier à traiter. Le type CSV provient de l\'oscilloscope et le type TXT provient de l\'enregistrement de ce logiciel.</p></body></html>"))
        self.label_type_fichier.setText(_translate("MainWindow", "type_fichier"))
        self.comboBox_type_fichier.setToolTip(_translate("MainWindow", "<html><head/><body><p>Type du fichier à traiter. Le type CSV provient de l\'oscilloscope et le type TXT provient de l\'enregistrement de ce logiciel.</p></body></html>"))
        self.comboBox_type_fichier.setItemText(0, _translate("MainWindow", "CSV"))
        self.comboBox_type_fichier.setItemText(1, _translate("MainWindow", "TXT"))
        self.checkBox_calc_temps.setToolTip(_translate("MainWindow", "<html><head/><body><p>Calculer le temps de l\'essai à partir du temps d\'échantillonnage.</p></body></html>"))
        self.checkBox_calc_temps.setText(_translate("MainWindow", "calc_temps"))
        self.groupBox_enregistrement_donnees.setTitle(_translate("MainWindow", "Enregistrement des Données"))
        self.checkBox_enregistrer_data.setToolTip(_translate("MainWindow", "<html><head/><body><p>Activer / Désactiver l\'enregistement des données traitées en format .txt. Les données ainsi traitée pourront être lues sans avoir à effectuer le traitement une nouvelle fois.</p></body></html>"))
        self.checkBox_enregistrer_data.setText(_translate("MainWindow", "enregistrer_data"))
        self.label_nom_enregistrement.setToolTip(_translate("MainWindow", "<html><head/><body><p>Nom du fichier d\'enregistrement.</p><p>Si superposer_courbes et actif, le nom des fichiers sera sous la forme nom_enregistrement_X où X est le numéro de lecture du fichier.</p><p><span style=\" font-weight:600;\">ATTENTION : Il faut mettre .txt à la fin du nom du fichier même si superposer_courbes est actif.</span></p></body></html>"))
        self.label_nom_enregistrement.setText(_translate("MainWindow", "nom_enregistrement"))
        self.lineEdit_nom_enregistrement.setToolTip(_translate("MainWindow", "<html><head/><body><p>Nom du fichier d\'enregistrement.</p><p>Si superposer_courbes et actif, le nom des fichiers sera sous la forme nom_enregistrement_X où X est le numéro de lecture du fichier.</p><p><span style=\" font-weight:600;\">ATTENTION : Il faut mettre .txt à la fin du nom du fichier même si superposer_courbes est actif.</span></p></body></html>"))
        self.label_dossier_enregistrement.setToolTip(_translate("MainWindow", "<html><head/><body><p>Chemin vers le dossier d\'enregistrement.</p></body></html>"))
        self.label_dossier_enregistrement.setText(_translate("MainWindow", "dossier_enregistrement"))
        self.lineEdit_dossier_enregistrement.setToolTip(_translate("MainWindow", "<html><head/><body><p>Chemin vers le dossier d\'enregistrement.</p></body></html>"))
        self.pushButton_parcourir_enregistrement.setToolTip(_translate("MainWindow", "<html><head/><body><p>Parcourrir le chemin et le nom du fichier d\'enregistrement.</p></body></html>"))
        self.pushButton_parcourir_enregistrement.setText(_translate("MainWindow", "Parcourir"))
        self.groupBox_traitement_donnees.setTitle(_translate("MainWindow", "Traitement des Données"))
        self.checkBox_sppr_rollback.setToolTip(_translate("MainWindow", "<html><head/><body><p>Suppression des données comportant un retour en arrière du déplacement. Cette fonctionnalité permet d\'éliminer les boucles de retour en arrière sur les courbes Force = f(Déplacement)</p></body></html>"))
        self.checkBox_sppr_rollback.setText(_translate("MainWindow", "sppr_rollback"))
        self.checkBox_recherche_deb_impact.setToolTip(_translate("MainWindow", "<html><head/><body><p>Recherche du début de l\'impact automatiquement.</p><p>Critère de recherche : pas(i) &gt;= pas(i-1) * (1 + taux_agmentation) =&gt; Impact</p><p>taux_augmentation en % (ex: 10% =&gt; taux_augmentation = 0.1)</p><p>Si recherche_deb_impact = True, la recherche du début de l\'impact est effectué et les variables taux_augmentation et nb_pas_avant_augmentation doivent-être renseignées.</p><p>Si le début de l\'essai est trouvé et qu\'il correspond à la position i des vecteurs de données, les données entre 0 et i - nb_pas_avant_augmentation sont supprimées.</p></body></html>"))
        self.checkBox_recherche_deb_impact.setText(_translate("MainWindow", "recherche_deb_impact"))
        self.label_taux_augmentation.setToolTip(_translate("MainWindow", "<html><head/><body><p>taux_augmentation en % (ex: 10% =&gt; taux_augmentation = 0.1)</p></body></html>"))
        self.label_taux_augmentation.setText(_translate("MainWindow", "taux_augmentation"))
        self.doubleSpinBox_taux_augmentation.setToolTip(_translate("MainWindow", "<html><head/><body><p>taux_augmentation en % (ex: 10% =&gt; taux_augmentation = 0.1)</p></body></html>"))
        self.label_nb_pas_avant_augmentation.setToolTip(_translate("MainWindow", "<html><head/><body><p>Nombre de pas de données à garder avant le début d\'impact détecté automatiquement.</p></body></html>"))
        self.label_nb_pas_avant_augmentation.setText(_translate("MainWindow", "nb_pas_avant_augmentation"))
        self.spinBox_nb_pas_avant_augmentation.setToolTip(_translate("MainWindow", "<html><head/><body><p>Nombre de pas de données à garder avant le début</p><p>d\'impact détecté automatiquement.</p></body></html>"))
        self.checkBox_deb_impact_manuel.setToolTip(_translate("MainWindow", "<html><head/><body><p>Début d\'impact manuel : Paramétrage d\'un temps au bout duquel le logiciel commençera à tracer les courbes. tmps_deb_impact doit être exprimé en (ms).</p><p><span style=\" font-weight:600;\">ATTENTION : Si deb_impact_manuel = True, calc_temps doit être activé !</span></p></body></html>"))
        self.checkBox_deb_impact_manuel.setText(_translate("MainWindow", "deb_impact_manuel"))
        self.label_tmps_deb_impact.setToolTip(_translate("MainWindow", "<html><head/><body><p>Temps manuel définissant le début de l\'impact.</p><p>tmps_deb_impact doit être exprimé en (ms).</p></body></html>"))
        self.label_tmps_deb_impact.setText(_translate("MainWindow", "tmps_deb_impact"))
        self.doubleSpinBox_tmps_deb_impact.setToolTip(_translate("MainWindow", "<html><head/><body><p>Temps manuel définissant le début de l\'impact.</p><p>tmps_deb_impact doit être exprimé en (ms).</p></body></html>"))
        self.checkBox_tarrage_dep.setToolTip(_translate("MainWindow", "<html><head/><body><p>Le tarrage du déplacement permet d\'avoir des graphes commençant à 0 mm.</p><p>Ce paramètre n\'est valable que si recherche_deb_impact ou deb_impact_manuel = True.</p></body></html>"))
        self.checkBox_tarrage_dep.setText(_translate("MainWindow", "tarrage_dep"))
        self.checkBox_tarrage_tmps.setToolTip(_translate("MainWindow", "<html><head/><body><p>Le tarrage du temps permet d\'avoir des graphes commençant à 0 ms.</p><p>Ce paramètre n\'est valable que si recherche_deb_impact ou deb_impact_manuel = True.</p></body></html>"))
        self.checkBox_tarrage_tmps.setText(_translate("MainWindow", "tarrage_tmps"))
        self.checkBox_detect_fin_essai.setToolTip(_translate("MainWindow", "<html><head/><body><p>La détection de fin de l\'essai permet d\'identifier si l\'impacteur est arrivé à bout de course et ainsi de savoir si la structure a emmagasinée toute l\'énergie de l\'impact.</p><p><span style=\" font-weight:600;\">ATTENTION : dep_max doit être renseigné dans la même unité que le vecteur déplacement !</span></p><p><span style=\" font-weight:600;\">ATTENTION : detect_fin_essai ne peut-être activé que lorsque sppr_rollback, recherche_deb_impact ou deb_impact_manuel et tarrage_dep sont activés !</span></p></body></html>"))
        self.checkBox_detect_fin_essai.setText(_translate("MainWindow", "detect_fin_essai"))
        self.label_dep_max.setToolTip(_translate("MainWindow", "<html><head/><body><p>Déplacement maximal de l\'impacteur après le début de l\'essai.</p><p><span style=\" font-weight:600;\">ATTENTION : dep_max doit être renseigné dans la même unité que le vecteur déplacement !</span></p></body></html>"))
        self.label_dep_max.setText(_translate("MainWindow", "dep_max"))
        self.doubleSpinBox_dep_max.setToolTip(_translate("MainWindow", "<html><head/><body><p>Déplacement maximal de l\'impacteur après le début de l\'essai.</p><p><span style=\" font-weight:600;\">ATTENTION : dep_max doit être renseigné dans la même unité que le vecteur déplacement !</span></p></body></html>"))
        self.checkBox_calculer_energie.setToolTip(_translate("MainWindow", "<html><head/><body><p>Si calculer_energie est activé, un calcul de l\'énergie (intégration des données Force = f(Déplacement) avec la méthode des trapèzes) est effectué.</p><p><span style=\" font-weight:600;\">ATTENTION : à l\'unité du résultat ! Les variables fact_force et fact_dep sont là pour changer l\'unité de la force et du déplacement.</span></p></body></html>"))
        self.checkBox_calculer_energie.setText(_translate("MainWindow", "calculer_energie"))
        self.label_fact_force.setToolTip(_translate("MainWindow", "<html><head/><body><p>Facteur d\'unité pour la force (Newton pour obtenir des joules).</p></body></html>"))
        self.label_fact_force.setText(_translate("MainWindow", "fact_force"))
        self.doubleSpinBox_fact_force.setToolTip(_translate("MainWindow", "<html><head/><body><p>Facteur d\'unité pour la force (Newton pour obtenir des joules).</p></body></html>"))
        self.label_fact_dep.setToolTip(_translate("MainWindow", "<html><head/><body><p>Facteur d\'unité pour le déplacement (Mètres pour obtenir des Joules).</p></body></html>"))
        self.label_fact_dep.setText(_translate("MainWindow", "fact_dep"))
        self.doubleSpinBox_fact_dep.setToolTip(_translate("MainWindow", "<html><head/><body><p>Facteur d\'unité pour le déplacement (Mètres pour obtenir des Joules).</p></body></html>"))
        self.checkBox_calc_vitesse_impact.setToolTip(_translate("MainWindow", "<html><head/><body><p>Calcul de la vitesse de l\'impacteur au début de l\'essai.</p><p>Pour que cette fonctionnalité soit opérationnelle, il faut que le début d\'impact ait été détecté et soit correct.</p></body></html>"))
        self.checkBox_calc_vitesse_impact.setText(_translate("MainWindow", "calc_vitesse_impact"))
        self.label_nbpts_vitesse_impact.setToolTip(_translate("MainWindow", "<html><head/><body><p>Ce paramètre correspond au nombre de points pris pour calculer la pente déplacement = f(temps) et faire la moyenne pour obtenir la vitesse d\'impact. En général 3 points sont suffisants.</p></body></html>"))
        self.label_nbpts_vitesse_impact.setText(_translate("MainWindow", "nbpts_vitesse_impact"))
        self.spinBox_nbpts_vitesse_impact.setToolTip(_translate("MainWindow", "<html><head/><body><p>Ce paramètre correspond au nombre de points pris pour calculer la pente déplacement = f(temps) et faire la moyenne pour obtenir la vitesse d\'impact. En général 3 points sont suffisants.</p></body></html>"))
        self.groupBox_graphiques.setTitle(_translate("MainWindow", "Graphiques à Afficher"))
        self.checkBox_afficher_dep_tmps.setToolTip(_translate("MainWindow", "<html><head/><body><p>Afficher le graphique Déplacement = f(Temps).</p></body></html>"))
        self.checkBox_afficher_dep_tmps.setText(_translate("MainWindow", "afficher_dep_tmps"))
        self.checkBox_afficher_F_tmps.setToolTip(_translate("MainWindow", "<html><head/><body><p>Afficher le graphique Force = f(Temps).</p></body></html>"))
        self.checkBox_afficher_F_tmps.setText(_translate("MainWindow", "afficher_F_tmps"))
        self.checkBox_afficher_F_dep.setToolTip(_translate("MainWindow", "<html><head/><body><p>Afficher le graphique Force = f(Déplacement).</p></body></html>"))
        self.checkBox_afficher_F_dep.setText(_translate("MainWindow", "afficher_F_dep"))
        self.checkBox_afficher_sep.setToolTip(_translate("MainWindow", "<html><head/><body><p>Afficher les graphiques séparéments.</p></body></html>"))
        self.checkBox_afficher_sep.setText(_translate("MainWindow", "afficher_sep"))
        self.pushButton_Defaults.setToolTip(_translate("MainWindow", "<html><head/><body><p>Paramétrer les valeurs par défaut dans la fenêtre.</p><p>Ces valeurs se trouvent dans le fichier config_default.conf à la racine des fichiers du logiciel.</p></body></html>"))
        self.pushButton_Defaults.setText(_translate("MainWindow", "Valeurs par Défaut"))
        self.pushButton_MakeConfig.setToolTip(_translate("MainWindow", "<html><head/><body><p>Générer un fichier de configuration à partir de la configuration renseignée dans la fenêtre.</p></body></html>"))
        self.pushButton_MakeConfig.setText(_translate("MainWindow", "Générer \"config.conf\""))
        self.pushButton_ExecDataTreatment.setToolTip(_translate("MainWindow", "<html><head/><body><p>Exécuter le traitement des données et afficher les graphes.</p></body></html>"))
        self.pushButton_ExecDataTreatment.setText(_translate("MainWindow", "Exécuter le Traitement des Données"))
        self.pushButton_Quit.setToolTip(_translate("MainWindow", "<html><head/><body><p>Quitter le logiciel.</p></body></html>"))
        self.pushButton_Quit.setText(_translate("MainWindow", "Quitter le Logiciel"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">Terminal</p></body></html>"))
        self.textEdit_terminal.setToolTip(_translate("MainWindow", "<html><head/><body><p>Terminal où les infos, warning et erreurs de traitement seront affichés.</p></body></html>"))
        self.pushButton_effacer_terminal.setToolTip(_translate("MainWindow", "<html><head/><body><p>Effacer tous les messages du terminal.</p></body></html>"))
        self.pushButton_effacer_terminal.setText(_translate("MainWindow", "Effacer les Messages du Terminal"))
        self.menuFichers.setTitle(_translate("MainWindow", "Fichiers"))
        self.menuAide.setTitle(_translate("MainWindow", "Aide"))
        self.actionOuvrir_un_fichier_de_configuration.setText(_translate("MainWindow", "Ouvrir un fichier de configuration"))
        self.actionOuvrir_un_fichier_de_configuration.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionQuitter.setText(_translate("MainWindow", "Quitter"))
        self.actionQuitter.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionAide.setText(_translate("MainWindow", "Aide"))
        self.actionAide.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.action_Propos.setText(_translate("MainWindow", "À Propos"))
        self.action_APropos.setText(_translate("MainWindow", "À Propos"))
